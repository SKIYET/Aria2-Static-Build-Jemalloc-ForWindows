#
# Copyright (c) 2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Aria2-Pro-Core
# File name: snippet/cross-build
#

ZLIB_BUILD() {
    mkdir -p $BUILD_DIR/zlib && cd $BUILD_DIR/zlib
    curl -Ls -o - "$ZLIB" | tar zxf - --strip-components=1
    ./configure \
        --prefix=$PREFIX \
        --static
    make -j$(nproc)
    make install
}

EXPAT_BUILD() {
    mkdir -p $BUILD_DIR/expat && cd $BUILD_DIR/expat
    curl -Ls -o - "$EXPAT" | tar jxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --without-examples \
        --without-tests \
        --without-docbook
    make -j$(nproc)
    make install
}

C_ARES_BUILD() {
    mkdir -p $BUILD_DIR/c-ares && cd $BUILD_DIR/c-ares
    curl -Ls -o - "$C_ARES" | tar zxf - --strip-components=1
    if [ "${cares_ver}" = "1.17.1" ]; then
    	echo "patching c-ares"
    	patch -p1 < $SCRIPT_DIR/patch/dependences-patch/c-ares*.patch
    	autoreconf -fi || autoreconf -fiv
    fi
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-tests
    make -j$(nproc)
    make install
}
	
OPENSSL_BUILD() {
    mkdir -p $BUILD_DIR/openssl && cd $BUILD_DIR/openssl
    curl -Ls -o - "$OPENSSL" | tar zxf - --strip-components=1
    ./Configure \
        --prefix=$PREFIX \
        $OPENSSL_ARCH \
	no-asm \
	threads \
        zlib \
        --with-zlib-include=$PREFIX/include \
        --with-zlib-lib==$PREFIX/lib/ \
        no-tests
    make -j$(nproc)
    make install_sw
}

SQLITE3_BUILD() {
    mkdir -p $BUILD_DIR/sqlite3 && cd $BUILD_DIR/sqlite3
    curl -Ls -o - "$SQLITE3" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
	--enable-static-shell \
        --disable-shared \
        --disable-dynamic-extensions
    make -j$(nproc)
    make install
}

LIBSSH2_BUILD() {
    mkdir -p $BUILD_DIR/libssh2 && cd $BUILD_DIR/libssh2
    curl -Ls -o - "$LIBSSH2" | tar zxf - --strip-components=1
    ./configure \
        --host=$HOST \
        --prefix=$PREFIX \
		--with-libz \
        --with-openssl \
        --without-libgcrypt \
        --without-wincng \
        --enable-static \
        --disable-shared \
        --disable-examples-build
    make -j$(nproc)
    make install
}

 # Jemalloc #指定x86_64-w64-mingw32-gcc/g++使用posix模型而非默认的win32模型，否则报错
 # 错误内容同https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=757259
JEMALLOC_BUILD() {
    mkdir -p $BUILD_DIR/jemalloc && cd $BUILD_DIR/jemalloc
    curl -Ls -o - "$JEMALLOC" | tar jxf - --strip-components=1
    CC=$HOST-gcc-posix \
	CXX=$HOST-g++-posix \
	./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=$PREFIX \
        --enable-static \
        --disable-shared \
        --disable-stats \
        --enable-prof
    make -j$(nproc)
    make install
}

#由于编译jemalloc使用编译器的posix模型，这里也指定posix模型，否则报错
ARIA2_BUILD() {
    ARIA2_CODE_GET
CC=$HOST-gcc-posix \
CXX=$HOST-g++-posix \
    ./configure \
        --host=$HOST \
        --build=$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) \
        --prefix=${ARIA2_PREFIX:-'/usr/loacl/'} \
		--without-included-gettext \
		--without-libxml2 \
		--without-libgmp \
		--without-gnutls \
		--without-wintls \
		--without-libgcrypt \
		--without-libnettle \
		--with-libz \
        --with-libcares \
        --with-libexpat \
        --with-openssl \
        --with-libssh2 \
        --with-sqlite3 \
        --with-jemalloc \
		--with-cppunit-prefix=$PREFIX \
        --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt' \
		--enable-threads=posix \
        ARIA2_STATIC=yes \
        --disable-shared \
	CPPFLAGS="-I$PREFIX/include" \
	LDFLAGS="-L$PREFIX/lib" \
	PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig"
    make -j$(nproc)
}
